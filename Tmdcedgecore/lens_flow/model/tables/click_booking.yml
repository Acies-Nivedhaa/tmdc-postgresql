tables:
  - name: click_booking
    # Path of the sql file, example - {{table_name.sql}}
    sql: {{ load_sql('click_booking') }}
    description: Captures details of hotel bookings including location, user, campaign, impressions, interactions and booking amounts.
    # Set this property to true/false to control visibilty of table. 
    public: true # table will be visible to everyone

    To establish relationship with other table (this will always create left join)
    joins:
      - name: user_loc
        relationship: many_to_one
        sql: "{TABLE.location_id} = {user_loc.location_id}"

    dimensions:
        # Name should follow snake-case format
      - name: booking_date
        type: date
        column: booking_date
        description: "Date column"

      - name: location_id
        type: number
        column: location_id
        description: "Unique location ID"

      - name: geo_id
        type: number
        column: geo_id
        description: "Unique geographic ID"

      - name: location_name
        type: string
        column: location_name
        description: "Name of the State"

      - name: geo_name
        type: string
        column: geo_name
        description: "Name of the Country"

      - name: booking_id
        type: number
        column: booking_id
        description: "Unique identifier for booking"

      - name: advertiser_id
        type: number
        column: advertiser_id
        description: "Unique identifier for advertiser"

      - name: campaign_id
        type: number
        column: campaign_id
        description: "Unique identifier for Campaign"

      - name: user_id
        type: number
        column: user_id 
        description: "Unique identifier for Users"

      - name: impression_count
        type: number
        column: impression_count
        description: "Number of impressions"

      - name: interaction_count
        type: number
        column: interaction_count
        description: "Number of interactions"

    measures:
      - name: total_bookings
        description: "Total number of bookings"
        # Define custome SQL snippet or map dimension
        sql: "COUNT( DISTINCT{booking_id})"
        # Set type for this measure (types - string,time,boolean,number,count,count_distinct,count_distinct_approx,sum,avg,min,max)
        type: number


    # To create frequently used complex filters 
    # And can also be used to apply row filter policy on a group of users
    # segments:
    #   - name: segment_name
    #     public: true
    #     # SQL statement for filter
    #     sql: "{TABLE}.dimension_name = 'dimension_value'"
    #     meta:
    #       # To apply pre-defined filter by default to user groups
    #       secure:
    #         user_groups:
    #           - default
